sig.ICU = ICU$significance,
logFC.nonICU = nonICU$significance,
logFC.post = post$significance,
row.names = ICU$OlinkID, check.rows = F, check.names = F
)
annot3 <- data.frame(condition = colnames(sig), row.names = colnames(sig), check.names = F, check.rows = F)
ord <- colnames(df)[ph1$tree_row$order]
sig <- sig[ord, ]
sig <- apply(X = sig, MARGIN = 2, as.numeric)
prots <- cutree(ph1$tree_row, k=4)
cumsum(table(prots))
table(prots)
ph3 <- pheatmap(mat = sig,
color = c("steelblue", "darkred"),
scale = 'none', breaks = c(0, 0.5, 1),
show_rownames = F,
cluster_cols = F,
annotation_col = annot2 %>% select(condition),
annotation_colors = list(condition = cols),
cluster_rows = F,
gaps_row = c(95, 95 + 12, 95 + 12 + 57),
cellwidth = 25,
angle_col = 45,
labels_col = c('Significance ICU', 'Significance non-ICU', 'Signficance post-COVID-19'), legend = F)
ph3 <- pheatmap(mat = sig,
color = c("steelblue", "darkred"),
scale = 'none', breaks = c(0, 0.5, 1),
show_rownames = F,
cluster_cols = F,
annotation_col = annot3 %>% select(condition),
annotation_colors = list(condition = cols),
cluster_rows = F,
gaps_row = c(95, 95 + 12, 95 + 12 + 57),
cellwidth = 25,
angle_col = 45,
labels_col = c('Significance ICU', 'Significance non-ICU', 'Signficance post-COVID-19'), legend = F)
annot3
# Heatmap of the significance per protein. TRUE/FALSE
load('data/data.RData')
ICU <- read.xlsx('output/DE.xlsx', sheet = 'healthy_vs_ICU')
nonICU <- read.xlsx('output/DE.xlsx', sheet = 'healthy_vs_nonICU')
post <- read.xlsx('output/DE.xlsx', sheet = 'healthy_vs_postcovid')
post %<>% filter(OlinkID %in% ICU$OlinkID) %>% arrange(match(OlinkID, ICU$OlinkID))
nonICU %<>% arrange(match(OlinkID, ICU$OlinkID))
sig <- data.frame(
sig.ICU = ICU$significance,
logFC.nonICU = nonICU$significance,
logFC.post = post$significance,
row.names = ICU$OlinkID, check.rows = F, check.names = F
)
annot3 <- data.frame(condition = colnames(sig), row.names = colnames(sig), check.names = F, check.rows = F)
annot3
sig
sig <- data.frame(
'ICU' = ICU$significance,
'nonICU' = nonICU$significance,
'post-COVID-19'  = post$significance,
row.names = ICU$OlinkID, check.rows = F, check.names = F
)
annot3 <- data.frame(condition = colnames(sig), row.names = colnames(sig), check.names = F, check.rows = F)
annot3
# Reorder df based on the same order as ph1
ord <- colnames(df)[ph1$tree_row$order]
sig <- sig[ord, ]
sig <- apply(X = sig, MARGIN = 2, as.numeric)
prots <- cutree(ph1$tree_row, k=4)
cumsum(table(prots))
table(prots)
ph3 <- pheatmap(mat = sig,
color = c("steelblue", "darkred"),
scale = 'none', breaks = c(0, 0.5, 1),
show_rownames = F,
cluster_cols = F,
annotation_col = annot3 %>% select(condition),
annotation_colors = list(condition = cols),
cluster_rows = F,
gaps_row = c(95, 95 + 12, 95 + 12 + 57),
cellwidth = 25,
angle_col = 45,
labels_col = c('Significance ICU', 'Significance non-ICU', 'Signficance post-COVID-19'), legend = F)
cols
sig <- data.frame(
'ICU' = ICU$significance,
'non-ICU' = nonICU$significance,
'post-COVID-19'  = post$significance,
row.names = ICU$OlinkID, check.rows = F, check.names = F
)
annot3 <- data.frame(condition = colnames(sig), row.names = colnames(sig), check.names = F, check.rows = F)
# Reorder df based on the same order as ph1
ord <- colnames(df)[ph1$tree_row$order]
sig <- sig[ord, ]
sig <- apply(X = sig, MARGIN = 2, as.numeric)
prots <- cutree(ph1$tree_row, k=4)
cumsum(table(prots))
table(prots)
ph3 <- pheatmap(mat = sig,
color = c("steelblue", "darkred"),
scale = 'none', breaks = c(0, 0.5, 1),
show_rownames = F,
cluster_cols = F,
annotation_col = annot3 %>% select(condition),
annotation_colors = list(condition = cols),
cluster_rows = F,
gaps_row = c(95, 95 + 12, 95 + 12 + 57),
cellwidth = 25,
angle_col = 45,
labels_col = c('Significance ICU', 'Significance non-ICU', 'Signficance post-COVID-19'), legend = F)
ggarrange(plotlist = list(ph1[[4]], ph2[[4]], ph3[[4]]))
ph3 <- pheatmap(mat = sig,
color = c("steelblue", "darkred"),
scale = 'none', breaks = c(0, 0.5, 1),
show_rownames = F,
cluster_cols = F,
annotation_col = annot3 %>% select(condition),
annotation_colors = list(condition = cols),
cluster_rows = F, show_colnames = F,
gaps_row = c(95, 95 + 12, 95 + 12 + 57),
cellwidth = 25,
angle_col = 45,
labels_col = c('Significance ICU', 'Significance non-ICU', 'Signficance post-COVID-19'), legend = F)
ggarrange(plotlist = list(ph1[[4]], ph2[[4]], ph3[[4]]), nrow = 1, ncol = 3)
ggarrange(plotlist = list(ph1[[4]], ph2[[4]], ph3[[4]]), nrow = 1, ncol = 3, widths = c(4, 1, 1))
ggarrange(plotlist = list(ph1[[4]], ph2[[4]], ph3[[4]]), nrow = 1, ncol = 3, widths = c(4, 1, 1), common.legend = T)
dev.off()
dev.off()
dev.off()
dev.off()
ggarrange(plotlist = list(ph1[[4]], ph2[[4]], ph3[[4]]), nrow = 1, ncol = 3, widths = c(4, 1, 1), common.legend = T)
ggarrange(plotlist = list(ph1[[4]], ph2[[4]], ph3[[4]]), nrow = 1, ncol = 3)
ph3 <- pheatmap(mat = sig,
color = c("steelblue", "darkred"),
scale = 'none', breaks = c(0, 0.5, 1),
show_rownames = F,
cluster_cols = F,
annotation_col = annot3 %>% select(condition),
annotation_colors = list(condition = cols),
cluster_rows = F, show_colnames = F,
gaps_row = c(95, 95 + 12, 95 + 12 + 57),
cellwidth = 25,
angle_col = 45,
labels_col = c('Significance ICU', 'Significance non-ICU', 'Signficance post-COVID-19'), legend = F, main = 'Significance')
ggarrange(plotlist = list(ph1[[4]], ph2[[4]], ph3[[4]]), nrow = 1, ncol = 3)
ggarrange(plotlist = list(ph1[[4]], ph2[[4]], ph3[[4]]), nrow = 1, ncol = 3, common.legend = T)
dev.off()
grid.arrange(list(ph1[[4]], ph2[[4]], ph3[[4]]))
grid.arrange(list(ph1, ph2, ph3))
ggarrange(as_ggplot(ph1))
as.ggplot(ph1)
as_ggplot(ph1)
as_ggplot(ph1[[4]])
ggarrange(
as_ggplot(ph1[[4]]),
as_ggplot(ph2[[4]]),
as_ggplot(ph3[[4]])
)
ggarrange(
as_ggplot(ph1[[4]]),
as_ggplot(ph2[[4]]),
as_ggplot(ph3[[4]]), nrow = 1, ncol = 3
)
ggarrange(
as_ggplot(ph1[[4]]),
as_ggplot(ph2[[4]]),
as_ggplot(ph3[[4]]), nrow = 1, ncol = 3, widths = c(4, 1, 1)
)
get_legend(as_ggplot(ph1[[4]]))
ggarrange(
as_ggplot(ph1[[4]]),
as_ggplot(ph2[[4]]),
as_ggplot(ph3[[4]]), nrow = 1, ncol = 3, widths = c(4, 1, 1), common.legend = T
)
ph3 <- pheatmap(mat = sig,
color = c("steelblue", "darkred"),
scale = 'none', breaks = c(0, 0.5, 1),
show_rownames = F,
cluster_cols = F,
annotation_col = annot3 %>% select(condition),
annotation_colors = list(condition = cols),
cluster_rows = F, show_colnames = F,
gaps_row = c(95, 95 + 12, 95 + 12 + 57),
cellwidth = 25, annotation_legend = F,
angle_col = 45,
labels_col = c('Significance ICU', 'Significance non-ICU', 'Signficance post-COVID-19'), legend = F, main = 'Significance')
ph2 <- pheatmap(mat = logfc,
color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdBu")))(100),
scale = 'row',
show_rownames = F,
show_colnames=F,
annotation_col = annot2 %>% select(condition),
cluster_cols = F,
annotation_colors = list(condition = cols),
cluster_rows = F,
gaps_row = c(95, 95 + 12, 95 + 12 + 57),
cellwidth = 25,
angle_col = 45, annotation_legend = F,
width = 4, height = 4, filename = 'test_heatmap.pdf', main = 'log-fold change')
ph2 <- pheatmap(mat = logfc,
color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdBu")))(100),
scale = 'row',
show_rownames = F,
show_colnames=F,
annotation_col = annot2 %>% select(condition),
cluster_cols = F,
annotation_colors = list(condition = cols),
cluster_rows = F,
gaps_row = c(95, 95 + 12, 95 + 12 + 57),
cellwidth = 25,
angle_col = 45, annotation_legend = F,legend = F,
width = 4, height = 4, filename = 'test_heatmap.pdf', main = 'log-fold change')
ggarrange(
as_ggplot(ph1[[4]]),
as_ggplot(ph2[[4]]),
as_ggplot(ph3[[4]]), nrow = 1, ncol = 3, widths = c(4, 1, 1))
dev.off()
dev.off()
ggarrange(
as_ggplot(ph1[[4]]),
as_ggplot(ph2[[4]]),
as_ggplot(ph3[[4]]), nrow = 1, ncol = 3, widths = c(4, 1, 1))
ggarrange(
as_ggplot(ph1[[4]]),
as_ggplot(ph2[[4]]),
as_ggplot(ph3[[4]]), nrow = 1, ncol = 3, widths = c(4, 2, 2))
ph1 <- pheatmap::pheatmap(mat = t(df),
scale = 'row',
show_colnames = F,
cluster_cols = F,
annotation_col = annot %>% select(condition),
breaks = seq(-2, 2, length.out = 100),
show_rownames = F,
annotation_colors = list(condition = cols),
annotation_names_col = F,
fontsize = 8, main = 'Protein abundance levels'
color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdBu")))(100),
cutree_rows = 4)
ph1 <- pheatmap::pheatmap(mat = t(df),
scale = 'row',
show_colnames = F,
cluster_cols = F,
annotation_col = annot %>% select(condition),
breaks = seq(-2, 2, length.out = 100),
show_rownames = F,
annotation_colors = list(condition = cols),
annotation_names_col = F,
fontsize = 8, main = 'Protein abundance levels',
color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdBu")))(100),
cutree_rows = 4)
ggarrange(
as_ggplot(ph1[[4]]),
as_ggplot(ph2[[4]]),
as_ggplot(ph3[[4]]), nrow = 1, ncol = 3, widths = c(4, 2, 2))
ph2 <- pheatmap(mat = logfc,
color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdBu")))(100),
scale = 'row',
show_rownames = F,
show_colnames=F,
annotation_col = annot2 %>% select(condition),
cluster_cols = F,
annotation_colors = list(condition = cols),
cluster_rows = F,
gaps_row = c(95, 95 + 12, 95 + 12 + 57), fontsize = 8,
cellwidth = 25,
angle_col = 45, annotation_legend = F,legend = F,
width = 4, height = 4, filename = 'test_heatmap.pdf', main = 'log-fold change')
ph3 <- pheatmap(mat = sig,
color = c("steelblue", "darkred"),
scale = 'none', breaks = c(0, 0.5, 1),
show_rownames = F,
cluster_cols = F,
annotation_col = annot3 %>% select(condition),
annotation_colors = list(condition = cols), fontsize = 8,
cluster_rows = F, show_colnames = F,
gaps_row = c(95, 95 + 12, 95 + 12 + 57),
cellwidth = 25, annotation_legend = F,
angle_col = 45,
labels_col = c('Significance ICU', 'Significance non-ICU', 'Signficance post-COVID-19'), legend = F, main = 'Significance')
dev.off()
ggarrange(
as_ggplot(ph1[[4]]),
as_ggplot(ph2[[4]]),
as_ggplot(ph3[[4]]), nrow = 1, ncol = 3, widths = c(4, 2, 2))
# Heatmap of the logFC per protein
rm(list = ls())
try(dev.off())
load('data/data.RData')
library(dplyr)
library(magrittr)
library(ggplot2)
library(ggsci)
library(RColorBrewer)
library(openxlsx)
library(pheatmap)
# Define the colours we want to use for ICU, non-ICU, postcovid and healthy
cols <- c('ICU' = '#BC3C29FF', 'non-ICU' = '#E18727FF', 'post-COVID-19' = '#0072B5FF', 'healthy' = '#1fc600')
theme_set(theme_classic() + theme(text = element_text(size = 12)))
# annot radboud unique patients
annot.radboud %<>% filter(time == 'W1T1')
annot <- rbind(annot.mhh %>% arrange(time.convalescence) %>% select(age, gender, condition),
annot.radboud %>% select(age, gender, condition))
# Heatmap over Radboud and MHH cohorts
common <- intersect(colnames(mhh), colnames(radboud))
annot.radboud %<>% filter(time == 'W1T1')
df <- rbind(
mhh %>% select(all_of(common)),
radboud %>% select(all_of(common))
)
df <- na.omit(df)
annot <- annot[which(rownames(annot) %in% rownames(df)), ]
annot <- na.omit(annot)
df <- df[which(rownames(df) %in% rownames(annot)), ]
annot$condition[which(annot$condition == 'postcovid')] <- 'post-COVID-19'
annot$condition <- factor(annot$condition, levels = c('ICU', 'non-ICU', 'post-COVID-19', 'healthy'))
annot %<>% arrange(condition)
df %<>% arrange(match(rownames(df), rownames(annot)))
all(rownames(df) == rownames(annot))
DE <- unique(c(
read.xlsx('output/biomarkers.xlsx', sheet = 'ICU', colNames=F) %>% pull(X1),
read.xlsx('output/biomarkers.xlsx', sheet = 'nonICU', colNames=F) %>% pull(X1),
read.xlsx('output/biomarkers.xlsx', sheet = 'postcovid', colNames=F) %>% pull(X1)
))
df %<>% select(all_of(DE))
ph1 <- pheatmap::pheatmap(mat = t(df),
scale = 'row',
show_colnames = F,
cluster_cols = F,
annotation_col = annot %>% select(condition),
breaks = seq(-2, 2, length.out = 100),
show_rownames = F,
annotation_colors = list(condition = cols),
annotation_names_col = F,
fontsize = 8, main = 'Protein abundance levels',
color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdBu")))(100),
cutree_rows = 4)
#### Heatmap of the logFC
load('data/data.RData')
ICU <- read.xlsx('output/DE.xlsx', sheet = 'healthy_vs_ICU')
nonICU <- read.xlsx('output/DE.xlsx', sheet = 'healthy_vs_nonICU')
post <- read.xlsx('output/DE.xlsx', sheet = 'healthy_vs_postcovid')
post %<>% filter(OlinkID %in% ICU$OlinkID) %>% arrange(match(OlinkID, ICU$OlinkID))
nonICU %<>% arrange(match(OlinkID, ICU$OlinkID))
logfc <- data.frame(
"ICU" = ICU$logFC,
'non-ICU' = nonICU$logFC,
"post-COVID-19" = post$logFC,
row.names = ICU$OlinkID,
check.rows = F, check.names = F
)
# Reorder df based on the same order as ph1
ord <- colnames(df)[ph1$tree_row$order]
logfc <- logfc[ord, ]
prots <- cutree(ph1$tree_row, k=4)
cumsum(table(prots))
table(prots)
annot2 <- data.frame(condition = colnames(logfc), row.names = colnames(logfc), check.names = F, check.rows = F)
ph2 <- pheatmap(mat = logfc,
color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdBu")))(100),
scale = 'row',
show_rownames = F,
show_colnames=F,
annotation_col = annot2 %>% select(condition),
cluster_cols = F,
annotation_colors = list(condition = cols),
cluster_rows = F,
gaps_row = c(95, 95 + 12, 95 + 12 + 57), fontsize = 8,
cellwidth = 25,
angle_col = 45, annotation_legend = F,legend = F,
width = 4, height = 4, filename = 'test_heatmap.pdf', main = 'log-fold change')
# Heatmap of the significance per protein. TRUE/FALSE
load('data/data.RData')
ICU <- read.xlsx('output/DE.xlsx', sheet = 'healthy_vs_ICU')
nonICU <- read.xlsx('output/DE.xlsx', sheet = 'healthy_vs_nonICU')
post <- read.xlsx('output/DE.xlsx', sheet = 'healthy_vs_postcovid')
post %<>% filter(OlinkID %in% ICU$OlinkID) %>% arrange(match(OlinkID, ICU$OlinkID))
nonICU %<>% arrange(match(OlinkID, ICU$OlinkID))
sig <- data.frame(
'ICU' = ICU$significance,
'non-ICU' = nonICU$significance,
'post-COVID-19'  = post$significance,
row.names = ICU$OlinkID, check.rows = F, check.names = F
)
annot3 <- data.frame(condition = colnames(sig), row.names = colnames(sig), check.names = F, check.rows = F)
# Reorder df based on the same order as ph1
ord <- colnames(df)[ph1$tree_row$order]
sig <- sig[ord, ]
sig <- apply(X = sig, MARGIN = 2, as.numeric)
prots <- cutree(ph1$tree_row, k=4)
cumsum(table(prots))
table(prots)
ph3 <- pheatmap(mat = sig,
color = c("steelblue", "darkred"),
scale = 'none', breaks = c(0, 0.5, 1),
show_rownames = F,
cluster_cols = F,
annotation_col = annot3 %>% select(condition),
annotation_colors = list(condition = cols), fontsize = 8,
cluster_rows = F, show_colnames = F,
gaps_row = c(95, 95 + 12, 95 + 12 + 57),
cellwidth = 25, annotation_legend = F,
angle_col = 45,
labels_col = c('Significance ICU', 'Significance non-ICU', 'Signficance post-COVID-19'), legend = F, main = 'Significance')
ggarrange(
as_ggplot(ph1[[4]]),
as_ggplot(ph2[[4]]),
as_ggplot(ph3[[4]]), nrow = 1, ncol = 3, widths = c(4, 2, 2))
dev.off()
ggarrange(
as_ggplot(ph1[[4]]),
as_ggplot(ph2[[4]]),
as_ggplot(ph3[[4]]), nrow = 1, ncol = 3, widths = c(4, 2, 2))
ph3 <- pheatmap(mat = sig,
color = c("steelblue", "darkred"),
scale = 'none', breaks = c(0, 0.5, 1),
show_rownames = F,
cluster_cols = F,
annotation_col = annot3 %>% select(condition),
annotation_colors = list(condition = cols), fontsize = 8,
cluster_rows = F, show_colnames = F,
gaps_row = c(95, 95 + 12, 95 + 12 + 57),
cellwidth = 25, annotation_legend = F, annotation_names_col = F,
angle_col = 45,
labels_col = c('Significance ICU', 'Significance non-ICU', 'Signficance post-COVID-19'), legend = F, main = 'Significance')
ph2 <- pheatmap(mat = logfc,
color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdBu")))(100),
scale = 'row',
show_rownames = F,
show_colnames=F,
annotation_col = annot2 %>% select(condition),
cluster_cols = F,
annotation_colors = list(condition = cols),
cluster_rows = F,
gaps_row = c(95, 95 + 12, 95 + 12 + 57), fontsize = 8, annotation_names_col = F,
cellwidth = 25,
angle_col = 45, annotation_legend = F,legend = F,
width = 4, height = 4, filename = 'test_heatmap.pdf', main = 'log-fold change')
ggarrange(
as_ggplot(ph1[[4]]),
as_ggplot(ph2[[4]]),
as_ggplot(ph3[[4]]), nrow = 1, ncol = 3, widths = c(4, 2, 2))
dev.off()
ggarrange(
as_ggplot(ph1[[4]]),
as_ggplot(ph2[[4]]),
as_ggplot(ph3[[4]]), nrow = 1, ncol = 3, widths = c(4, 2, 2))
ggarrange(
as_ggplot(ph1[[4]]),
as_ggplot(ph2[[4]]),
as_ggplot(ph3[[4]]), nrow = 1, ncol = 3, widths = c(4, 1.5, 1.5))
dev.off()
pdf('heatmaps_comb.pdf', width = 14, height = 4)
ggarrange(
as_ggplot(ph1[[4]]),
as_ggplot(ph2[[4]]),
as_ggplot(ph3[[4]]), nrow = 1, ncol = 3, widths = c(4, 1.5, 1.5))
dev.off()
pdf('heatmaps_comb.pdf', width = 14, height = 4)
ggarrange(
as_ggplot(ph1[[4]]),
as_ggplot(ph2[[4]]),
as_ggplot(ph3[[4]]), nrow = 1, ncol = 3, widths = c(3, 1, 1))
dev.off()
pdf('heatmaps_comb.pdf', width = 10, height = 4)
ggarrange(
as_ggplot(ph1[[4]]),
as_ggplot(ph2[[4]]),
as_ggplot(ph3[[4]]), nrow = 1, ncol = 3, widths = c(3, 1, 1))
dev.off()
png('heatmaps_comb.png', width = 10, height = 4)
ggarrange(
as_ggplot(ph1[[4]]),
as_ggplot(ph2[[4]]),
as_ggplot(ph3[[4]]), nrow = 1, ncol = 3, widths = c(3, 1, 1))
dev.off()
png('heatmaps_comb.png', width = 10, height = 4, units = 'in')
ggarrange(
as_ggplot(ph1[[4]]),
as_ggplot(ph2[[4]]),
as_ggplot(ph3[[4]]), nrow = 1, ncol = 3, widths = c(3, 1, 1))
dev.off()
png('heatmaps_comb.png', width = 10, height = 4, units = 'in', res = 300)
ggarrange(
as_ggplot(ph1[[4]]),
as_ggplot(ph2[[4]]),
as_ggplot(ph3[[4]]), nrow = 1, ncol = 3, widths = c(3, 1, 1))
dev.off()
library(openxlsx)
library(magrittr)
library(limma)
library(dplyr)
library(ggpubr)
library(ggVennDiagram)
library(ggplot2)
library(pheatmap)
library(RColorBrewer)
rm(list = ls())
load('data/data.RData')
# prepare data. Take only common proteins and the first timepoint for Nijmegen cohort
# Prepare the data. We take only the common proteins and patients who were in the ICU at their first timepoint for the Nijmegen cohort
annot <- rbind(
annot.radboud %>% filter(time == 'W1T1') %>% select(age, gender, condition, cohort),
annot.mhh %>% select(age, gender, condition, cohort)
)
df <- rbind(
mhh %>% select(intersect(colnames(mhh), colnames(radboud))),
radboud %>% select(intersect(colnames(mhh), colnames(radboud)))
)
# Only T1
df %<>% filter(rownames(df) %in% intersect(rownames(df), rownames(annot)))
annot %<>% filter(rownames(annot) %in% intersect(rownames(annot), rownames(df))) %>% arrange(match(rownames(annot), rownames(df)))
sub.annot <- annot %>% filter(condition %in% c('healthy', 'ICU'))
sub.df <- df %>% filter(row.names(df) %in% rownames(sub.annot))
View(sub.annot)
View(sub.df)
